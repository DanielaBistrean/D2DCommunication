//
// Generated file, do not edit! Created by nedtool 5.3 from data_packet.msg.
//

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#ifndef __DATA_PACKET_M_H
#define __DATA_PACKET_M_H

#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0503
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
    typedef struct _payload
    {
        int fileId; 		     //if file request
        char fileData[4096]; 	// if file data response
        
    } payload;
// }}

/**
 * Class generated from <tt>data_packet.msg:28</tt> by nedtool.
 * <pre>
 * packet Data_packet
 * {
 *     bool isRequest;
 *     int sequenceNumber;
 *     int type;
 *     int senderID;
 *     int size;
 *     payload data;
 * }
 * </pre>
 */
class Data_packet : public ::omnetpp::cPacket
{
  protected:
    bool isRequest;
    int sequenceNumber;
    int type;
    int senderID;
    int size;
    payload data;

  private:
    void copy(const Data_packet& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const Data_packet&);

  public:
    Data_packet(const char *name=nullptr, short kind=0);
    Data_packet(const Data_packet& other);
    virtual ~Data_packet();
    Data_packet& operator=(const Data_packet& other);
    virtual Data_packet *dup() const override {return new Data_packet(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual bool getIsRequest() const;
    virtual void setIsRequest(bool isRequest);
    virtual int getSequenceNumber() const;
    virtual void setSequenceNumber(int sequenceNumber);
    virtual int getType() const;
    virtual void setType(int type);
    virtual int getSenderID() const;
    virtual void setSenderID(int senderID);
    virtual int getSize() const;
    virtual void setSize(int size);
    virtual payload& getData();
    virtual const payload& getData() const {return const_cast<Data_packet*>(this)->getData();}
    virtual void setData(const payload& data);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const Data_packet& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, Data_packet& obj) {obj.parsimUnpack(b);}


#endif // ifndef __DATA_PACKET_M_H

